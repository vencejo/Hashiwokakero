#BlueJ class context
comment0.target=Puente()
comment0.text=\nConstructor\n\n
comment1.params=islaInicial\ islaFinal
comment1.target=Puente(Isla,\ Isla)
comment1.text=\nConstructor\ \n\n
comment10.params=puente
comment10.target=void\ ponerDoble(Puente)
comment10.text=\nPone\ un\ puente\ como\ doble\n\n
comment11.target=void\ ponerFilas()
comment11.text=\nponerFilas\ es\ un\ metodo\ auxiliar\ del\ constructor\ que\ marca\ las\ filas\ que\ cruza\ \nun\ puente\ vertical\n\n
comment12.target=void\ ponerColumnas()
comment12.text=\nponerColumas\ es\ un\ metodo\ auxiliar\ del\ constructor\ que\ marca\ las\ columnas\ que\ cruza\nun\ puente\ horizontal\n\n
comment13.params=islaInicial\ islaFinal\ conjuntoDePuentes
comment13.target=Puente\ mirarPuente(Isla,\ Isla,\ HashSet<Puente>)
comment13.text=\nRastrea\ en\ el\ conjunto\ de\ puentes\ tendios\ a\ ver\ si\ hay\ alguno\ que\ conecte\ la\ islaInicial\ncon\ la\ islaFinal,\ si\ es\ asi,\ devuelve\ el\ puente\ que\ las\ conecta,\ en\ caso\ contrario\ devuelve\ null\n\n
comment14.params=islaInicial\ islaFinal\ conjuntoDePuentes
comment14.target=boolean\ puenteDoble(Isla,\ Isla,\ HashSet<Puente>)
comment14.text=\nComprueba\ si\ hay\ un\ puente\ doble\ entre\ las\ dos\ islas\ en\ el\ conjunto\ de\ puentes\n\n
comment15.params=islaInicial\ islaFinal\ conjuntoDePuentes\ listaIslas
comment15.target=boolean\ puenteLibre(Isla,\ Isla,\ HashSet<Puente>,\ ArrayList<Isla>)
comment15.text=\nDevuelve\ verdadero\ si\ se\ puede\ hacer\ un\ puente\ entre\ las\ dos\ islas\ dadas,\ mirando\na\ ver\ si\ ya\ hay\ algun\ puente\ previo\ entre\ ambas\n\n
comment16.params=islaInicial\ islaFinal\ conjPuentesVerticales\ conjPuentesHorizontales
comment16.target=boolean\ puentesCruzados(Isla,\ Isla,\ HashSet<Puente>,\ HashSet<Puente>)
comment16.text=\nMira\ a\ ver\ si\ hay\ algun\ puente\ cruzado\ en\ el\ trayecto\ de\ la\ islaA\ a\ la\ islaB\n\n
comment17.params=islaInicial\ islaFinal\ conjuntoDePuentes
comment17.target=void\ actualizarPuentes(Isla,\ Isla,\ HashSet<Puente>)
comment17.text=\nCon\ este\ metodo\ actualizamos\ el\ conjunto\ de\ los\ puentes\ metiendo\ un\ nuevo\ puente\ al\ que\ \nintroduce\ en\ el\ conjuntoDePuentes\ o\ que\ ha\ encontrado\ un\ puente\ simple\ en\ el\nconjunto\ de\ puentes\ ,\ en\ cuyo\ caso\ lo\ pone\ doble.\n\nAtenci\u00C3\u00B3n\!\ para\ usar\ este\ m\u00C3\u00A9todo\ primero\ nos\ tenemos\ que\ asegurar\ con\ el\ m\u00C3\u00A9todo\ puenteLibre\nde\ que\ se\ puede\ tender\ un\ puente\ entre\ las\ islas\ consideradas\n\n\n
comment18.params=isla\ conjuntoDePuentes
comment18.target=HashSet<Puente>\ puentesDeLaIsla(Isla,\ HashSet<Puente>)
comment18.text=\nMe\ da\ el\ conjunto\ de\ puentes\ que\ salen\ de\ la\ isla\ considerada\n\n
comment19.params=conjuntoDePuentes
comment19.target=ArrayList<Isla>\ islasDeLosPuentes(HashSet<Puente>)
comment19.text=\nMe\ da\ la\ lista\ de\ las\ islas\ que\ componen\ un\ conjunto\ de\ puentes\n\n
comment2.target=Puente\ clonar()
comment2.text=\nCloneador\ de\ puentes\n\n
comment20.params=isla\ ConjuntoVerticales\ ConjuntoHorizontales\ listaIslas
comment20.target=int\ vecinasConPuentesAlaIsla(Isla,\ HashSet<Puente>,\ HashSet<Puente>,\ ArrayList<Isla>)
comment20.text=\nMe\ da\ una\ cuenta\ de\ \ las\ vecinas\ que\ tienen\ puentes\ dirigidos\ a\ la\ isla\ considerada\ y\ que\ pueden\ tender\nalgun\ puente\ mas\n\n
comment21.params=puentesVerticales\ puentesHorizontales
comment21.target=HashSet<Puente>\ unirPuentes(HashSet<Puente>,\ HashSet<Puente>)
comment21.text=\nDa\ como\ resultado\ la\ union\ de\ dos\ conjuntos\ de\ puentes\ \n\n
comment22.params=puenteA\ puenteB
comment22.target=boolean\ iguales(Puente,\ Puente)
comment22.text=\nDevuelve\ verdadero\ si\ dos\ puentes\ son\ iguales\n\n
comment3.params=puente
comment3.target=Isla\ obtenerIslaA(Puente)
comment3.text=\nObtiene\ la\ islaA\ de\ un\ puente\ dado\n\n
comment4.params=puente
comment4.target=Isla\ obtenerIslaB(Puente)
comment4.text=\nObtiene\ la\ islaB\ de\ un\ puente\ dado\n\n
comment5.params=puente
comment5.target=int[]\ obtenerFilas(Puente)
comment5.text=\nObtiene\ las\ filas\ de\ un\ puente\ dado\n\n
comment6.params=puente
comment6.target=int[]\ obtenerColumnas(Puente)
comment6.text=\nObtiene\ las\ columnas\ de\ un\ puente\ dado\n\n
comment7.params=puente
comment7.target=Tipo\ obtenerTipo(Puente)
comment7.text=\nObtiene\ el\ tipo\ de\ puente\n\n
comment8.params=puente
comment8.target=Orientacion\ obtenerOrientacion(Puente)
comment8.text=\nObtiene\ la\ orientacion\ del\ puente\n\n
comment9.params=puente
comment9.target=void\ ponerSimple(Puente)
comment9.text=\nPone\ un\ puente\ como\ simple\n\n
numComments=23
